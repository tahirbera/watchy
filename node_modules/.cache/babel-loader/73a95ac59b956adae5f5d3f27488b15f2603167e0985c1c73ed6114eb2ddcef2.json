{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tahir\\\\Desktop\\\\React\\\\React.dev exercises\\\\my-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst initialTasks = [{\n  id: 0,\n  text: 'Visit Kafka Museum',\n  done: true\n}, {\n  id: 1,\n  text: 'Watch a puppet show',\n  done: false\n}, {\n  id: 2,\n  text: 'Lennon Wall pic',\n  done: false\n}];\nexport default function App() {\n  _s();\n  const [tasks, setTasks] = useState(initialTasks);\n  const [edit, setEditing] = useState(false);\n  function deleteTask(taskId) {\n    setTasks(tasks.filter(t => t.id !== taskId));\n  }\n  function editTask(taskId) {\n    setEditing(true);\n    // You may want to implement the edit logic here\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(AddTask, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n        children: tasks.map(task => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: edit ? /*#__PURE__*/_jsxDEV(\"input\", {\n            value: task.text,\n            onChange: e => {\n              setTasks(prevTasks => prevTasks.map(t => t.id === task.id ? {\n                ...t,\n                text: e.target.value\n              } : t));\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [task.text, /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              checked: task.done\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => deleteTask(task.id),\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => editTask(task.id),\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true)\n        }, task.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(App, \"wH7JJgBoPq6sTDwaCo8g/zoxMBw=\");\n_c = App;\nfunction AddTask() {\n  return /*#__PURE__*/_jsxDEV(\"input\", {\n    type: \"text\",\n    placeholder: \"Add task\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 10\n  }, this);\n}\n_c2 = AddTask;\nvar _c, _c2;\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"AddTask\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","initialTasks","id","text","done","App","_s","tasks","setTasks","edit","setEditing","deleteTask","taskId","filter","t","editTask","children","AddTask","fileName","_jsxFileName","lineNumber","columnNumber","map","task","value","onChange","e","prevTasks","target","type","checked","onClick","_c","placeholder","_c2","$RefreshReg$"],"sources":["C:/Users/tahir/Desktop/React/React.dev exercises/my-app/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\n\nconst initialTasks = [\n  { id: 0, text: 'Visit Kafka Museum', done: true },\n  { id: 1, text: 'Watch a puppet show', done: false },\n  { id: 2, text: 'Lennon Wall pic', done: false },\n];\n\nexport default function App() {\n  const [tasks, setTasks] = useState(initialTasks);\n  const [edit, setEditing] = useState(false);\n\n  function deleteTask(taskId) {\n    setTasks(tasks.filter((t) => t.id !== taskId));\n  }\n\n  function editTask(taskId) {\n    setEditing(true);\n    // You may want to implement the edit logic here\n  }\n\n  return (\n    <>\n      <div>\n        <AddTask />\n        <ol>\n          {tasks.map((task) => (\n            <li key={task.id}>\n              {edit ? (\n                <input\n                  value={task.text}\n                  onChange={(e) => {\n                    setTasks((prevTasks) =>\n                      prevTasks.map((t) =>\n                        t.id === task.id\n                          ? { ...t, text: e.target.value }\n                          : t\n                      )\n                    );\n                  }}\n                />\n              ) : (\n                <>\n                  {task.text}\n                  <input type=\"checkbox\" checked={task.done} />\n                  <button onClick={() => deleteTask(task.id)}>Delete</button>\n                  <button onClick={() => editTask(task.id)}>Edit</button>\n                </>\n              )}\n            </li>\n          ))}\n        </ol>\n      </div>\n    </>\n  );\n}\n\nfunction AddTask() {\n  return <input type=\"text\" placeholder=\"Add task\" />;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}